package app;

import java.util.ArrayList;

import javax.swing.JOptionPane;

public class EntradaSalida {

/// ***************************************SELECCION OPCIONES[validaciones]******************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************

	public static String SeleccionDeOpciones(String[] OpcionesMenu, String ubicacion) {

		String OpcionSeleccionada = (String) JOptionPane.showInputDialog(null, "Seleccione una opcion", ubicacion,
				JOptionPane.QUESTION_MESSAGE, null, OpcionesMenu, OpcionesMenu[0]);

		return OpcionSeleccionada;

	}

/// ***************************************INGRESO EQUIPO[validaciones]******************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
	public static String IngresandoNombreEquipo(String mensaje, ArrayList<Equipo> equipos) {
		String nombre = JOptionPane.showInputDialog(mensaje);
		nombre = verificacionEntradaNombreEquipo(nombre, equipos);

		return nombre;

	}

	private static String verificacionEntradaNombreEquipo(String nombre, ArrayList<Equipo> equipos) {

		while (nombre == null || nombre.trim().isEmpty() || ExistenciaDelNombreEnMiEquipo(nombre, equipos)
				|| ExistenciaDeUnNumeroEnMiString(nombre)) {

			nombre = JOptionPane.showInputDialog("Error,Ingresa un nuevo nombre de equipo:");

		}

		return nombre;

	}

	private static boolean ExistenciaDelNombreEnMiEquipo(String equipo, ArrayList<Equipo> equipos) {

		for (int i = 0; i < equipos.size(); i++) {

			if (equipos.get(i).getNombreEquipo().equalsIgnoreCase(equipo)) {

				return true;
			}
		}

		return false;
	}

	private static boolean ExistenciaDeUnNumeroEnMiString(String nombre) {

		for (char caracter : nombre.toCharArray()) {

			if (Character.isDigit(caracter)) {

				return true;
			}

		}

		return false;

	}

/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************

/// ***************************************INGRESO CIUDAD[validaciones]******************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************

	public static String IngresandoCiudad(String mensaje) {
		String ciudad = JOptionPane.showInputDialog(mensaje);
		ciudad = VerificacionDelaCiudad(ciudad);

		return ciudad;

	}

	private static String VerificacionDelaCiudad(String nombre) {

		while (nombre == null || nombre.trim().isEmpty() || ExistenciaDeUnNumeroEnMiString(nombre)) {

			nombre = JOptionPane.showInputDialog("Error,Ingresa el nuevo nombre de la ciudad ");

		}

		return nombre;

	}

/// ******************************************INGRESO NOMBRE JUGADOR [valodaciones]******************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************

	public static String IngresandoNombreJugador(String mensaje, ArrayList<Equipo> equipos, String EquipoSeleccionado) {
		String nombre = JOptionPane.showInputDialog(mensaje);
		nombre = verificacionEntradaNombreJugador(nombre, equipos, EquipoSeleccionado);

		return nombre;

	}

	private static String verificacionEntradaNombreJugador(String nombre, ArrayList<Equipo> equipos,
			String EquipoSeleccionado) {

		while (nombre == null || nombre.trim().isEmpty()
				|| ExistenciaJugadorEnMiEquipo(nombre, equipos, EquipoSeleccionado)
				|| ExistenciaDeUnNumeroEnMiString(nombre)) {

			nombre = JOptionPane.showInputDialog("Error,Ingresa un nuevo nombre de jugador:");

		}

		return nombre;

	}

	private static boolean ExistenciaJugadorEnMiEquipo(String nombre, ArrayList<Equipo> equipos,
			String equipoSeleccionado) {

		for (int i = 0; i < equipos.size(); i++) {

			if (equipos.get(i).getNombreEquipo().equalsIgnoreCase(equipoSeleccionado)) {

				for (int j = 0; j < equipos.get(i).getJugadores().size(); j++) {

					if (nombre.equalsIgnoreCase(equipos.get(i).getJugadores().get(j).getNombre())) {

						return true;

					}

				}

			}
		}

		return false;
	}

/// ******************************************INGRESO NOMBRE JUGADOR [valodaciones]******************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************

/// ******************************************INGRESO EDAD JUGADOR [valodaciones]******************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
	public static int IngresandoEdadJugador(String mensaje, ArrayList<Equipo> equipos, String EquipoSeleccionado) {
		String edad = JOptionPane.showInputDialog(mensaje);
		int edadNum = VerificandoEntradaEdad(edad);

		return edadNum;

	}

	private static int VerificandoEntradaEdad(String edadNum) {

		int numero = StringPresentaUnNumero(edadNum);

		while (numero < 16 || numero > 42) {

			edadNum = JOptionPane.showInputDialog("Error,Ingresa la edad del jugador[16-42] :");
			numero = StringPresentaUnNumero(edadNum);
		}

		return Integer.parseInt(edadNum);

	}

	private static int StringPresentaUnNumero(String numEnCadena) {

		try {

			Integer.parseInt(numEnCadena);

			return Integer.parseInt(numEnCadena);

		} catch (NumberFormatException e) {

			return 0;
		}

	}

/// ******************************************INGRESO EDAD JUGADOR [valodaciones]******************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************

/// ******************************************INGRESO POSICION JUGADOR [valodaciones]******************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************

	public static String IngresandoPosicionJugador(String mensaje, ArrayList<Equipo> equipos,
			String EquipoSeleccionado) {

		String Mensaje = "DEL=DELANTERO\nMC=MEDIOCAMPISTA\nDEF=DEFENSOR\nPOR=PORTERO\n";
		String posicion = JOptionPane.showInputDialog(Mensaje + mensaje);
		posicion = VerificandoEntradaPosicion(posicion, Mensaje);

		return posicion;

	}

	private static String VerificandoEntradaPosicion(String posicion, String mensaje) {

		while (posicion == null || (!posicion.equalsIgnoreCase("POR") && !posicion.equalsIgnoreCase("DEF")
				&& !posicion.equalsIgnoreCase("MC") && !posicion.equalsIgnoreCase("DEL")
				&& !posicion.equalsIgnoreCase("DEL"))) {

			posicion = JOptionPane.showInputDialog(mensaje + "\nError,Ingresa la posicion del jugador:  ");

		}

		return posicion.toUpperCase();

	}

/// ******************************************INGRESO NUMERO CAMISETA [valodaciones]******************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************

	public static int IngresandoNumeroCamiseta(String mensaje, ArrayList<Equipo> equipos, String EquipoSeleccionado) {

		int numCamisetaEntero = 0;
		String numCamiseta = JOptionPane.showInputDialog(mensaje);
		numCamisetaEntero = VerficandoEntradaDenumCamiseta(numCamiseta, equipos, EquipoSeleccionado);

		return numCamisetaEntero;

	}

	private static int VerficandoEntradaDenumCamiseta(String numCamiseta, ArrayList<Equipo> equipos,
			String EquipoSeleccionado) {

		int numeroCamiseta = ExisteEseNumeroDeCamisetaEnelEquipo(numCamiseta, equipos, EquipoSeleccionado);

		while (numeroCamiseta <= 0) {

			if (numeroCamiseta == -1) {
				JOptionPane.showMessageDialog(null, "Ingresaste un numero de camiseta existente");
				numCamiseta = JOptionPane.showInputDialog("Ingresa el numero de la camiseta: ");
				numeroCamiseta = ExisteEseNumeroDeCamisetaEnelEquipo(numCamiseta, equipos, EquipoSeleccionado);
			} else {

				JOptionPane.showMessageDialog(null, "Error, no es un numero entero positivo..");
				numCamiseta = JOptionPane.showInputDialog("Ingresa el numero de la camiseta: ");
				numeroCamiseta = ExisteEseNumeroDeCamisetaEnelEquipo(numCamiseta, equipos, EquipoSeleccionado);

			}

		}

		return numeroCamiseta;

	}

	private static int ExisteEseNumeroDeCamisetaEnelEquipo(String numCamiseta, ArrayList<Equipo> equipos,
			String EquipoSeleccionado) {

		int numeroCamiseta = StringPresentaUnNumero(numCamiseta);

		for (Equipo equipo : equipos) {

			if (equipo.getNombreEquipo().equals(EquipoSeleccionado)) {

				for (Jugador jugador : equipo.getJugadores()) {

					if (jugador.getNumCamiseta() == numeroCamiseta || numeroCamiseta <= 0) {

						if (numeroCamiseta <= 0) {
							return 0;
						} else {

							return -1;
						}

					}
				}
			}

		}

		return numeroCamiseta;

	}

/// ***************************************INGRESO SALDO[validaciones]******************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************

	public static int IngresoDeSaldo(String mensaje) {

		int saldo = 0;
		boolean saldoValido = false;

		while (!saldoValido) {
			try {
				saldo = Integer.parseInt(JOptionPane.showInputDialog(mensaje));
				if (saldo > 0) {
					saldoValido = true;
				} else {
					JOptionPane.showMessageDialog(null, "El saldo debe ser mayor que cero.");
				}
			} catch (NumberFormatException e) {
				JOptionPane.showMessageDialog(null, "Por favor, ingresa un número válido.");
			}
		}

		return saldo;

	}

/// ***************************************INGRESAR APUESTA [validaciones]******************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************
/// *************************************************************************************************************************************************

	public static int IngresaApuesta(int saldo) {

		int apuesta = 0;
		boolean saldoValido = false;

		while (!saldoValido) {
			try {
				apuesta = Integer.parseInt(JOptionPane.showInputDialog("Realiza tu apuesta:\n"));
				if (apuesta > 0 && apuesta <= saldo) {
					saldoValido = true;
				} else if (apuesta <= 0) {
					JOptionPane.showMessageDialog(null, "la apuesta debe ser mayor que cero.");
				} else if (apuesta > saldo) {
					JOptionPane.showMessageDialog(null, "la apuesta  no debe ser mayor que $" + saldo);
				}
			} catch (NumberFormatException e) {
				JOptionPane.showMessageDialog(null, "Por favor, ingresa un número válido.");
			}
		}

		return apuesta;

	}

}
